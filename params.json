{"tagline":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Callisto","google":"","body":"# Callisto\r\n\r\n## What Is It?\r\n\r\nCallisto is a library for use in Windows 8 XAML applications (aka Metro style apps).  The XAML framework in Windows.UI.Xaml is great, but has some functionality that isn't provided in-the-box in a few controls and APIs.  Callisto serves to provided added functionality on top of the XAML UI framework for Windows.\r\n\r\n## What's In It?\r\nSo far Callisto includes:\r\n\r\n* `Flyout` - a primitive that includes positioning and 'light dismiss' logic\r\n* `Menu` - primarily to be used from AppBar, contains the base for providing, well, a Menu\r\n* `MenuItem` - an item for a menu, including separators and contains the command point for the menu item\r\n* `SettingsFlyout` - an item to create a custom settings pane UI\r\n* `LiveTile` - an in-app tile experience to give you animated or 'live' tiles\r\n* `Tilt` - an effect to provide the tilt experience when clicked on edges/corners\r\n* OAuth helpers - a set of helpers to create OAuth 1.0 signatures/headers for those sites that hate OAuth 2.0 :-)\r\n* `BooleanToVisibilityConverter` - a converter to well, convert boolean to visibility, very common use\r\n* `LengthToBooleanConverter` - a converter to examine a string length to convert to boolean (simple validation helper)\r\n* `RelativeTimeConverter` - a converter to show time as relative string, i.e., 'about an hour ago'\r\n* `SQLite` - a client library for SQLite ported for Metro from http://github.com/praeclarum/sqlite-net\r\n* Extensions - some extension method helpers\r\n\r\nWhat is in the plan:\r\n\r\n* `DatePicker` and `TimePicker` - providing a globalized time/date picker control in Metro style\r\n* `Pivot` - a UI interface for providing \"tabbed\" interface in a Metro style way\r\n* `ThemeSwitcher` - to dynamically switch themes for certain UI components\r\n\r\n## How To Install It?\r\nThere are two ways you can install the control.  \r\n\r\n### Visual Studio Extension SDK\r\nIf you download the ZIP file it is formatted as an \"Extension SDK\" for Visual Studio 2011.  You would extract the contents of this ZIP file to:\r\n\r\n\t%ProgramFiles%\\Microsoft SDKs\\Windows\\v8.0\\ExtensionSDKs\r\n\r\nOnce placed there, the control will be available for all projects on your machine via the Add Reference dialog in Visual Studio under the Windows\\Extensions category.\r\n\r\n### NuGet\r\nYou can get the control via [NuGet](http://www.nuget.org) if you have the extension installed for Visual Studio or via the PowerShell package manager.  This control is published via NuGet at [Callisto](http://timheuer.com/).\r\n\r\n## How To Use It?\r\nTo use the controls you simply create an instance of them (we will use an example here) like `Flyout` and tell it what content goes in it and where it should go:\r\n\r\n\tusing Callisto.Controls;\r\n\t\r\n\tFlyout f = new Flyout();\r\n\t\r\n\t// Flyout is a ContentControl so set your content within it.\r\n\tf.Content = new Border() { Width=500, Height=500 };\r\n\t\r\n\tf.Placement = PlacementMode.Top;\r\n\tf.PlacementTarget = MyButton; // this is an UI element (usually the sender)\r\n\t\r\n\tf.IsOpen = true;\r\n\r\nYou can also use the Menu as content:\r\n\r\n\tusing Callisto.Controls;\r\n\t\r\n\tFlyout f = new Flyout();\r\n\t\r\n\tf.Placement = PlacementMode.Top;\r\n\tf.PlacementTarget = MyButton; // this is an UI element (usually the sender)\r\n\t\r\n\tMenu m = new Menu();\r\n\t\r\n\tMenuItem mi1 = new MenuItem();\r\n\tmi1.Text = \"Some Option\";\r\n\t\r\n\tMenuItem mi2 = new MenuItem();\r\n\tmi2.Text = \"Another Option Here\";\r\n\t\r\n\tm.Items.Add(mi1);\r\n\tm.Items.Add(new MenuItemSeparator());\r\n\tm.Items.Add(mi2);\r\n\t\r\n\tf.Content = m;\r\n\t\r\n\tf.IsOpen = true;\r\n\r\nThis creates a menu flyout for command from an `AppBar` control for example.\r\n\r\n### Using with content that gathers input\r\nIf you are using the Flyout with a `UserControl` that perhaps would gather input, you need to take account the fact that the input host manager (IHM) or 'soft keyboard' will show up in touch situations.  An un-parented `Flyout` control will not automatically scroll into view when the soft keyboard shows up.  This means that if you have input on the bottom `AppBar` as an example, your input would be hidden because the soft keyboard will likely cover it.  \r\n\r\nThis is solvable by adding the `Flyout` to the view.  You must now, however, manage the removal of it so you don't get a leak.  Here is a pseudo example\r\n\r\n\tusing Callisto.Controls;\r\n\t\r\n\tFlyout f = new Flyout();\r\n\t\r\n\t// other stuff here\r\n\t\r\n\tLayoutRoot.Children.Add(f.HostPopup); // add this to some existing control in your view like the root visual\r\n\t\r\n\t// remove the parenting during the Closed event on the Flyout\r\n\tf.Closed += (s,a) =>\r\n\t\t{\r\n\t\t\tLayoutRoot.Children.Remove(f.HostPopup);\r\n\t\t};\r\n\r\nThis should prevent a leak of the object when it is dismissed.\r\n\r\n## Commands and Clicks\r\nWhen using just the `Flyout`, you own the Content within it.  When using the `Menu` and `MenuItem` you can attach an event to the `Tapped` event in `MenuItem` or also by providing a command that has implemented `ICommand` in your code.\r\n\r\n## I found an Issue\r\nGreat, please [log a bug](https://github.com/timheuer/Callisto/issues/new) so that it can be tracked. \r\n\r\n## Credits and Acknowledgements\r\n* [Tim Heuer](http://timheuer.com/blog/) ([@timheuer](http://twitter.com/timheuer)) - for the initial conception of the toolkit.\r\n* [Morten Nielsen](http://www.sharpgis.net/) ([@dotMorten](http://twitter.com/dotMorten)) - core contributor\r\n* Moon logo from [The Noun Project](http://thenounproject.com) which is a great source for Metro style iconography\r\n\r\n### Open Source Project Credits\r\nSome of the code represented in the toolkit is forks/ports of other Open Source libraries.  Where used, their license is reprsented in the code files.\r\n\r\n* [Silverlight Toolkit](http://silverlight.codeplex.com) - for providing the base of many ported concepts/code.  Licensed under Ms-PL\r\n* [RestSharp](http://restsharp.org) - the OAuth helper file is a fork from the RestSharp project which uses this internally for some authenticators. Licensed under Apache 2.0\r\n* [sqlite-net](https://github.com/praeclarum/sqlite-net) - a .NET client library for SQLite.  The SQLite client in Callisto is a fork/port of this.  Licensed under BSD...see notice in SQLite.cs\r\n* [Jeff Wilcox](http://www.jeff.wilcox.name) - Jeff's projects have provided a lot of inspiration in what shapes some of the curent \"TODO\" items (i.e., theme manager) and is a great source for Metro style app development for Windows Phone\r\n"}